name: Release For New Electron Version

on:
  workflow_dispatch:
    inputs:
        version:
          description: 'version'
          required: true

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  run_tests:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c  # tag: v3.3.0
      - name: Update Version
        run: node script/update-version.js ${{ github.event.inputs.version }}
      - name: Install Dependencies
        run: npm i
      - name: Run Tests
        run: npm test
  create_new_version:
    runs-on: ubuntu-latest
    needs: run_tests
    steps:
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c  # tag: v3.3.0
      - name: Setup Node.js
        uses: actions/setup-node@64ed1c7eab4cce3362f8c340dee64e5eaeef8f7c  # tag: v3.6.0
        with:
          node-version: lts/*
          registry-url: 'https://registry.npmjs.org'
      - name: Check npm credentials
        run: npm whoami
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
      - name: Set Git Credentials
        run: |
          git config user.name electron-bot
          git config user.email electron@github.com
      - name: Update Version
        run: node script/update-version.js ${{ github.event.inputs.version }}
      - name: Push Update Commit
        run: |
          git add .
          git commit -m "chore: update version to ${{ github.event.inputs.version }}"
          git push origin main
      - name: Push New Tag
        run: |
          git tag ${{ github.event.inputs.version }}
          git push origin ${{ github.event.inputs.version }}
      - name: Create Release
        run: |
          gh release create ${{ github.event.inputs.version }} -t ${{ github.event.inputs.version }}
      - name: Publish to npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
