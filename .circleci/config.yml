version: 2.1

orbs:
  node: circleci/node@5.1.0
  win: circleci/windows@5.0.0

commands:
  install:
    parameters:
      node-version:
        description: Node.js version to install
        type: string
    steps:
      - node/install:
          node-version: << parameters.node-version >>
      - run: nvm use << parameters.node-version >>
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ arch }}-{{ checksum "package-lock.json" }}
            - v1-dependencies-{{ arch }}
      - when:
          condition: << pipeline.git.tag >>
          steps:
            - run:
                name: Update Version
                command: node script/update-version.js << pipeline.git.tag >>
            - run: npm install
      - unless:
          condition: << pipeline.git.tag >>
          steps:
            - run:
                command: npm install
                environment:
                  ELECTRON_CHROMEDRIVER_STABLE_FALLBACK: 1
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ arch }}-{{ checksum "package-lock.json" }}
  test:
    steps:
      - run: node --version
      - run: npm --version
      - run: npm test

jobs:
  test-linux:
    docker:
      - image: cimg/base:stable
    parameters:
      node-version:
        description: Node.js version to install
        type: string
    steps:
      - install:
          node-version: << parameters.node-version >>
      - test
  test-mac:
    macos:
      xcode: "14.0.0"
    parameters:
      node-version:
        description: Node.js version to install
        type: string
    steps:
      - install:
          node-version: << parameters.node-version >>
      - test
  test-windows:
    executor:
      name: win/default
      shell: bash.exe
    parameters:
      node-version:
        description: Node.js version to install
        type: string
    steps:
      - install:
          node-version: << parameters.node-version >>
      - test
  release:
    docker:
      - image: cimg/node:18.14
    steps:
      - checkout
      - run:
          name: Update Version
          command: node script/update-version.js << pipeline.git.tag >>
      - run:
          name: Install Dependencies
          command: npm ci
      - run:
          name: Obtain Publishing Credentials
          command: npx @continuous-auth/circleci-oidc-github-auth@1.0.4
      - run:
          name: Confirm Version Updated
          command: node -e "if (require('./package.json').version === '0.0.0-development') process.exit(1)"
      - run:
          name: Set NPM Credentials
          command: echo //registry.npmjs.org/:_authToken=${NPM_TOKEN} > ~/.npmrc
      - run:
          name: Check NPM Credentials
          command: npm whoami
      - run:
          name: CFA Publish
          command: node script/publish.js

workflows:
  test_and_release:
    jobs:
      - test-linux:
          matrix:
            parameters:
              node-version:
                - 18.14.0
                - 16.19.0
                - 14.19.0
          filters:
            tags:
              only: /.*/
      - test-mac:
          matrix:
            parameters:
              node-version:
                - 18.14.0
                - 16.19.0
                - 14.19.0
          filters:
            tags:
              only: /.*/
      - test-windows:
          matrix:
            parameters:
              node-version:
                - 18.14.0
                - 16.19.0
                - 14.19.0
          filters:
            tags:
              only: /.*/
      - release:
          requires:
            - test-linux-18.14.0
            - test-linux-16.19.0
            - test-linux-14.19.0
            - test-mac-18.14.0
            - test-mac-16.19.0
            - test-mac-14.19.0
            - test-windows-18.14.0
            - test-windows-16.19.0
            - test-windows-14.19.0
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/
          context: cfa-release
